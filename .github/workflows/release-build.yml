name: Release Build

on:
  release:
    types:
      - published

permissions:
  contents: write

jobs:
  publish:
    name: Publish ${{ matrix.rid }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: ubuntu-latest
            rid: linux-arm64
          - os: macos-latest
            rid: osx-x64
          - os: macos-latest
            rid: osx-arm64
          - os: windows-latest
            rid: win-x64
          - os: windows-latest
            rid: win-arm64

    env:
      DOTNET_NOLOGO: 1

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Restore dependencies
        run: dotnet restore CleanupRulesets/CleanupRulesets.csproj

      - name: Publish
        run: dotnet publish CleanupRulesets/CleanupRulesets.csproj -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true -o publish/${{ matrix.rid }}

      - name: Create archive (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          cd publish/${{ matrix.rid }}
          zip -r ../../CleanupRulesets-${{ matrix.rid }}.zip .

      - name: Create archive (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $source = Join-Path "publish" "${{ matrix.rid }}"
          $destination = "CleanupRulesets-${{ matrix.rid }}.zip"
          if (Test-Path $destination) {
            Remove-Item $destination
          }
          Compress-Archive -Path (Join-Path $source '*') -DestinationPath $destination

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: CleanupRulesets-${{ matrix.rid }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
